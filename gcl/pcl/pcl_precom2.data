       
#(#! 
(lisp::in-package :pcl)
#((lisp::lambda #0=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.arg1. pcl::.dfun-rest-arg.) #1=(lisp::declare (lisp::ignore pcl::.pv-cell. pcl::.next-method-call.)) (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.fast-call-method.) pcl::.fast-call-method-list.)) #2=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) pcl::fast-method-call (lisp::lambda #2# (lisp::function (lisp::lambda #0# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3=(pcl::.dfun-rest-arg.))) (pcl::invoke-effective-method-function-fast pcl::effective-method-gensym-1 lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)))))) pcl::pcl (lisp::lambda #4=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.fast-call-method.) pcl::.fast-call-method-list.)) #5=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) (lisp::lambda #5# (lisp::function (lisp::lambda #4# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)) (pcl::invoke-effective-method-function-fast pcl::effective-method-gensym-1 lisp::t pcl::.arg0. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)))))) (lisp::lambda #6=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.arg1. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.call-method-list. pcl::.call-method.) pcl::.call-method-list.)) #7=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) pcl::method-call pcl::emf (pcl::method-call lisp::function) pcl::effective-method-gensym-1 (pcl::method-call lisp::function) (pcl::method-call lisp::function) (lisp::lambda #7# (lisp::function (lisp::lambda #6# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (pcl::invoke-effective-method-function pcl::effective-method-gensym-1 lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)))))) (lisp::lambda #8=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.call-method.) pcl::.call-method-list.)) #9=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) (pcl::method-call lisp::function) (pcl::method-call lisp::function) (lisp::lambda #9# (lisp::function (lisp::lambda #8# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)) (pcl::invoke-effective-method-function pcl::effective-method-gensym-1 lisp::t pcl::.arg0. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. . #3#)))))) (lisp::lambda #10=(pcl::.arg0. pcl::.arg1. pcl::.arg2.) (lisp::locally #11=(lisp::declare (lisp::optimize (lisp::speed 3) (lisp::safety 0))) (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. lisp::nil lisp::nil lisp::t :simple) pcl::.methods.))) pcl::.call.))) #12=(#13=#:g9046 #14=#:g9047 #15=#:g9048 #16=#:g9050) lisp::generic-function (lisp::lambda #12# (lisp::function (lisp::lambda #10# (lisp::locally #11# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. #13# #14# lisp::t :simple) #15#))) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #17=(lisp::quote pcl::fast-method-call)) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #18=(pcl::.arg0. pcl::.arg1. pcl::.arg2.))) (lisp::t (lisp::let ((#19=#:g9049 pcl::emf)) (lisp::if (lisp::typep #19# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #18#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) #20=(lisp::declare (lisp::type lisp::function pcl::.function.)) (lisp::if (lisp::if pcl::.cm-args. #21=(lisp::null (lisp::cdr pcl::.cm-args.))) . #22=((lisp::funcall pcl::.function. pcl::.args. (lisp::car pcl::.cm-args.)) (lisp::apply pcl::.function. pcl::.args. pcl::.cm-args.))))) (lisp::if (lisp::typep #19# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #18#)) (lisp::error (system::typecase-error-string (lisp::quote pcl::emf) #19# #16#))))))))))))) (lisp::lambda #23=(pcl::.arg0.) (lisp::locally #11# (lisp::let ((pcl::emf pcl::.methods.)) pcl::.call.))) #24=(#25=#:g9067 #26=#:g9069) lisp::nil pcl::std-instance pcl::*funcallable-instance-marker* pcl::..slot-unbound.. (lisp::lambda #24# (lisp::function (lisp::lambda #23# (lisp::locally #11# (lisp::let ((pcl::emf #25#)) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #17#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #27=(pcl::.arg0.))) ((lisp::typep pcl::emf (lisp::quote lisp::fixnum)) (lisp::let* ((pcl::.slots. (lisp::cond ((pcl::std-instance-p pcl::.arg0.) (pcl::%std-instance-slots pcl::.arg0.)) ((pcl::funcallable-instance-p pcl::.arg0.) (lisp::car (pcl::%cclosure-env-nthcdr 12 pcl::.arg0.))))) (pcl::value (lisp::if pcl::.slots. (lisp::progn (lisp::svref (lisp::the lisp::simple-vector pcl::.slots.) (lisp::the lisp::fixnum pcl::emf)))))) (lisp::if (lisp::eq pcl::value (lisp::quote pcl::..slot-unbound..)) (pcl::slot-unbound-internal pcl::.arg0. pcl::emf) pcl::value))) (lisp::t (lisp::let ((#28=#:g9068 pcl::emf)) (lisp::if (lisp::typep #28# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #27#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) #20# (lisp::if (lisp::if pcl::.cm-args. #21#) . #22#))) (lisp::if (lisp::typep #28# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #27#)) (lisp::error (system::typecase-error-string (lisp::quote pcl::emf) #28# #26#))))))))))))) (lisp::lambda #29=(pcl::.arg0. pcl::.arg1. pcl::.arg2.) (lisp::locally #11# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. lisp::nil lisp::nil lisp::t :assoc) pcl::.methods.))) pcl::.call.))) #30=(#31=#:g9102 #32=#:g9103 #33=#:g9104 #34=#:g9106) (lisp::lambda #30# (lisp::function (lisp::lambda #29# (lisp::locally #11# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. #31# #32# lisp::t :assoc) #33#))) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #17#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #35=(pcl::.arg0. pcl::.arg1. pcl::.arg2.))) (lisp::t (lisp::let ((#36=#:g9105 pcl::emf)) (lisp::if (lisp::typep #36# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #35#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) #20# (lisp::if (lisp::if pcl::.cm-args. #21#) . #22#))) (lisp::if (lisp::typep #36# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #35#)) (lisp::error (system::typecase-error-string (lisp::quote pcl::emf) #36# #34#))))))))))))) (lisp::lambda #37=(pcl::.arg0. pcl::.arg1.) (lisp::locally #11# (lisp::let ((pcl::emf pcl::.methods.)) pcl::.call.))) #38=(#39=#:g9340 #40=#:g9342) lisp::nil (lisp::lambda #38# (lisp::function (lisp::lambda #37# (lisp::locally #11# (lisp::let ((pcl::emf #39#)) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #17#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #41=(pcl::.arg0. pcl::.arg1.))) ((lisp::typep pcl::emf (lisp::quote lisp::fixnum)) (lisp::let ((pcl::.new-value. pcl::.arg0.) (pcl::.slots. (lisp::cond ((pcl::std-instance-p pcl::.arg0.) (pcl::%std-instance-slots pcl::.arg0.)) ((pcl::funcallable-instance-p pcl::.arg0.) (lisp::car (pcl::%cclosure-env-nthcdr 12 pcl::.arg0.)))))) (lisp::if pcl::.slots. (lisp::progn (system::svset (lisp::the lisp::simple-vector pcl::.slots.) (lisp::the lisp::fixnum pcl::emf) pcl::.new-value.))))) (lisp::t (lisp::let ((#42=#:g9341 pcl::emf)) (lisp::if (lisp::typep #42# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #41#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) #20# (lisp::if (lisp::if pcl::.cm-args. #21#) . #22#))) (lisp::if (lisp::typep #42# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #41#)) (lisp::error (system::typecase-error-string (lisp::quote pcl::emf) #42# #40#))))))))))))) pcl::emit-caching ((lisp::t lisp::class) lisp::nil) pcl::cache lisp::nil pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null* "my cache got freed somehow" lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class lisp::t lisp::t lisp::t) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class lisp::t lisp::t) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t lisp::t) lisp::t) lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::t lisp::class) lisp::t) lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class) lisp::t) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t lisp::t lisp::t) lisp::t) lisp::nil (pcl::method-call lisp::function) ((lisp::t lisp::class lisp::t) lisp::nil) lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t lisp::t) lisp::nil) lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t) lisp::t) lisp::nil (pcl::method-call lisp::function) ((lisp::class) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class) lisp::t) lisp::nil (pcl::method-call lisp::function) pcl::emit-constant-value ((lisp::class lisp::t)) lisp::nil ((lisp::class)) lisp::nil pcl::emit-checking ((lisp::t lisp::class lisp::t) lisp::nil) lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) ((lisp::class) lisp::t) lisp::nil (pcl::method-call lisp::function) ((lisp::class) lisp::nil) lisp::nil lisp::nil (pcl::method-call lisp::function) (lisp::lambda #43=(pcl::pv-cell pcl::cvector) (lisp::declare (lisp::type (lisp::simple-vector 2) pcl::cvector)) (lisp::function (lisp::lambda #44=(pcl::instance pcl::initargs) #45=(lisp::declare (lisp::optimize (lisp::speed 3) (lisp::safety 0))) (pcl::iis-body #46=(lisp::when (lisp::consp pcl::initargs) (lisp::setq pcl::initargs (lisp::cons (lisp::car pcl::initargs) (lisp::cdr pcl::initargs)))) (lisp::setq pcl::*initialize-info-cache-class* (lisp::svref pcl::cvector 0)) #47=(lisp::setq pcl::*initialize-info-cache-initargs* pcl::initargs) (lisp::setq pcl::*initialize-info-cache-info* (lisp::svref pcl::cvector 1)) #48=(lisp::setq pcl::initargs-tail pcl::initargs)) pcl::initargs))) lisp::nil pcl::*initialize-info-cache-class* pcl::*initialize-info-cache-initargs* pcl::*initialize-info-cache-info* ((pcl::default-initargs-function pcl::class-eq-specializer . #49=((:class) lisp::nil)) (pcl::default-initargs-function pcl::eql-specializer . #50=((:object) lisp::nil)) (pcl::default-initargs-function pcl::standard-direct-slot-definition . #51=((:class :initfunction :name :readers :writers :initargs :initform) lisp::nil)) (pcl::default-initargs-function pcl::standard-direct-slot-definition . #52=((:class :name :readers :writers :initargs) lisp::nil)) (pcl::default-initargs-function pcl::standard-effective-slot-definition . #53=((:name :initform :initfunction :initargs :allocation :type :class) lisp::nil)) (pcl::default-initargs-function lisp::standard-class . #54=((:name :direct-superclasses :direct-slots :definition-source :predicate-name) lisp::nil)) (pcl::default-initargs-function lisp::standard-class . #55=((:name :direct-superclasses :direct-slots :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #56=((:method-combination :method-class :lambda-list :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #57=((:method-combination :method-class :name) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #58=((:method-combination :method-class) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #59=((:qualifiers :specializers :lambda-list :function :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #60=((:qualifiers :specializers :lambda-list :definition-source :method-spec :fast-function :plist) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #61=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :definition-source :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function lisp::standard-method . #62=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :function) lisp::t)) (pcl::default-initargs-function pcl::standard-reader-method . #63=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function pcl::standard-writer-method . #64=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function pcl::standard-boundp-method . #65=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t))) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 10) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66=(pcl::initargs-tail))) #67=(lisp::setq pcl::value (lisp::pop pcl::initargs-tail)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 5 . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 6)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-reader-method . #63#) (pcl::shared-initialize-t-function pcl::standard-writer-method . #64#) (pcl::shared-initialize-t-function pcl::standard-boundp-method . #65#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 8) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 7 . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 5)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #62#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 7 . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #61#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #60#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #59#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 4) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 0)))) #68=(lisp::push pcl::value pcl::initargs) (lisp::push (lisp::quote :method-class) pcl::initargs) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 1)))) #68# (lisp::push (lisp::quote :method-combination) pcl::initargs) #46# (lisp::setq pcl::*initialize-info-cache-class* (lisp::svref pcl::cvector 2)) #47# (lisp::setq pcl::*initialize-info-cache-info* (lisp::svref pcl::cvector 3)) #48#) pcl::initargs))) lisp::nil :method-class :method-combination ((pcl::default-initargs-function lisp::standard-generic-function . #69=((:lambda-list :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function (:name) lisp::nil) (pcl::default-initargs-function lisp::standard-generic-function . #70=(lisp::nil lisp::nil))) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 0) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body) pcl::initargs))) lisp::nil ((pcl::shared-initialize-nil-function lisp::standard-generic-function . #70#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 4)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #58#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 5)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #57#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 10) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 7)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #56#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 1) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::shared-initialize-nil-function lisp::standard-generic-function . #69#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 17) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 5 . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 4) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 10) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 10) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 11) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 11) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 12) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 12) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 13) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 14) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 14) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 15) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 15) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 16) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 16) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-class . #54#) (pcl::shared-initialize-t-function lisp::standard-class . #55#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body #48# (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-effective-slot-definition . #53#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 13) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 4) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 10)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 12) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value 0) (lisp::setf (pcl::%instance-ref pcl::slots 12) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 14) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 14) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-effective-slot-definition . #53#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 5) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body #48# (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-direct-slot-definition . #52#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::t)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 9)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 9) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote :instance)) (lisp::setf (pcl::%instance-ref pcl::slots 9) pcl::value))) pcl::initargs))) lisp::nil :instance ((pcl::shared-initialize-t-function pcl::standard-direct-slot-definition . #52#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body #48# (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-direct-slot-definition . #51#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::t)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 9)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 9) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote :instance)) (lisp::setf (pcl::%instance-ref pcl::slots 9) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-direct-slot-definition . #51#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 1) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body #48# (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::class-eq-specializer . #49#) (pcl::combined-initialize-function pcl::eql-specializer . #50#)) (lisp::lambda #43# (lisp::declare (lisp::type (lisp::simple-vector 2) pcl::cvector)) (lisp::function (lisp::lambda #44# #45# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #66#)) #67# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::class-eq-specializer . #49#) (pcl::shared-initialize-t-function pcl::eql-specializer . #50#)) pcl::load-function-generator lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::load-precompiled-dfun-constructor lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::load-precompiled-iis-entry lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::cclosure-env-nthcdr pcl::%cclosure-env-nthcdr pcl::wrapper-of pcl::wrapper-for-structure pcl::built-in-wrapper-of system::structure-subtype-p pcl::slot-unbound-internal system::typecase-error-string lisp::typep (system::%init . #((system::setvv 252 (system::mc lisp::nil 103)) (system::setvv 251 (system::mc lisp::nil 102)) (system::setvv 250 (system::mc lisp::nil 101)) (system::setvv 249 (system::mc lisp::nil 100)) (system::setvv 248 (system::mc lisp::nil 99)) (system::setvv 247 (system::mc lisp::nil 98)) (system::setvv 246 (system::mc lisp::nil 97)) (system::setvv 245 (system::mc lisp::nil 96)) (system::setvv 244 (system::mc lisp::nil 95)) (system::setvv 243 (system::mc lisp::nil 94)) (system::setvv 242 (system::mc lisp::nil 93)) (system::setvv 241 (system::mc lisp::nil 92)) (system::setvv 240 (system::mc lisp::nil 91)) (system::setvv 239 (system::mc lisp::nil 90)) (system::setvv 238 (system::mc lisp::nil 89)) (system::setvv 237 (system::mc lisp::nil 88)) (system::setvv 236 (system::mc lisp::nil 87)) (system::setvv 235 (system::mc lisp::nil 86)) (system::setvv 234 (system::mc lisp::nil 85)) (system::setvv 233 (system::mc lisp::nil 84)) (system::setvv 232 (system::mc lisp::nil 83)) (system::setvv 230 (system::mc lisp::nil 82)) (system::setvv 229 (system::mc lisp::nil 81)) (system::setvv 228 (system::mc lisp::nil 80)) (system::setvv 227 (system::mc lisp::nil 79)) (system::setvv 226 (system::mc lisp::nil 78)) (system::setvv 225 (system::mc lisp::nil 77)) (system::setvv 224 (system::mc lisp::nil 76)) (system::setvv 223 (system::mc lisp::nil 75)) (system::setvv 222 (system::mc lisp::nil 74)) (system::setvv 221 (system::mc lisp::nil 73)) (system::setvv 220 (system::mc lisp::nil 72)) (system::setvv 219 (system::mc lisp::nil 71)) (system::setvv 218 (system::mc lisp::nil 70)) (system::setvv 217 (system::mc lisp::nil 69)) (system::setvv 216 (system::mc lisp::nil 68)) (system::setvv 215 (system::mc lisp::nil 67)) (system::setvv 214 (system::mc lisp::nil 66)) (system::setvv 213 (system::mc lisp::nil 65)) (system::setvv 212 (system::mc lisp::nil 64)) (system::setvv 211 (system::mc lisp::nil 63)) (system::setvv 210 (system::mc lisp::nil 62)) (system::setvv 209 (system::mc lisp::nil 61)) (system::setvv 208 (system::mc lisp::nil 60)) (system::setvv 206 (system::mc lisp::nil 59)) (system::setvv 205 (system::mc lisp::nil 58)) (system::setvv 204 (system::mc lisp::nil 57)) (system::setvv 203 (system::mc lisp::nil 56)) (system::setvv 202 (system::mc lisp::nil 55)) (system::setvv 201 (system::mc lisp::nil 54)) (system::setvv 200 (system::mc lisp::nil 53)) (system::setvv 199 (system::mc lisp::nil 52)) (system::mf (lisp::quote #71=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 0)9396|) 0) (#71#) (system::mf (lisp::quote #72=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 1)9396|) 1) (#72#) (system::mf (lisp::quote #73=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 2)9396|) 2) (#73#) (system::mf (lisp::quote #74=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 3)9396|) 3) (#74#) (system::mf (lisp::quote #75=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 4)9396|) 4) (#75#) (system::setvv 28 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #76=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 5)9396|) 5) (#76#) (system::mf (lisp::quote #77=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 6)9396|) 6) (#77#) (system::setvv 38 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #78=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 7)9396|) 7) (#78#) (system::setvv 43 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 47 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #79=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 8) (#79#) (system::setvv 50 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 51 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #80=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 9) (#80#) (system::setvv 54 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 55 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #81=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 10) (#81#) (system::setvv 58 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 59 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #82=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 11) (#82#) (system::setvv 62 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #83=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 12) (#83#) (system::setvv 65 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 66 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 67 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #84=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 13) (#84#) (system::setvv 70 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #85=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 14) (#85#) (system::setvv 73 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 74 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #86=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 15) (#86#) (system::setvv 77 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #87=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 16) (#87#) (system::setvv 80 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #88=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 17) (#88#) (system::setvv 83 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #89=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 18) (#89#) (system::setvv 86 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 87 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 88 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #90=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 19) (#90#) (system::setvv 91 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 92 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #91=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 20) (#91#) (system::setvv 95 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #92=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 21) (#92#) (system::setvv 98 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 99 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #93=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 22) (#93#) (system::setvv 102 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #94=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)9421|) 23) (#94#) (system::setvv 106 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #95=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CONSTANT-VALUE)9421|) 24) (#95#) (system::setvv 108 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #96=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CONSTANT-VALUE)9421|) 25) (#96#) (system::setvv 111 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #97=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)9421|) 26) (#97#) (system::setvv 114 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 115 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 116 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #98=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)9421|) 27) (#98#) (system::setvv 119 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 120 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #99=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)9421|) 28) (#99#) (system::setvv 123 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #100=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)9421|) 29) (#100#) (system::setvv 126 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 127 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #101=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)9421|) 30) (#101#) (system::setvv 130 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #102=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 0)9564|) 31) (#102#) (system::setvv 136 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #103=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 1)9564|) 32) (#103#) (system::setvv 139 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #104=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 2)9564|) 33) (#104#) (system::setvv 142 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #105=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 3)9564|) 34) (#105#) (system::setvv 145 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #106=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 4)9564|) 35) (#106#) (system::setvv 148 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #107=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 5)9564|) 36) (#107#) (system::setvv 151 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #108=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 6)9564|) 37) (#108#) (system::setvv 156 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #109=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 7)9564|) 38) (#109#) (system::setvv 159 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #110=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 8)9564|) 39) (#110#) (system::setvv 162 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #111=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 9)9564|) 40) (#111#) (system::setvv 165 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #112=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 10)9564|) 41) (#112#) (system::setvv 168 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #113=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 11)9564|) 42) (#113#) (system::setvv 171 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #114=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 12)9564|) 43) (#114#) (system::setvv 174 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #115=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 13)9564|) 44) (#115#) (system::setvv 177 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #116=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 14)9564|) 45) (#116#) (system::setvv 180 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #117=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 15)9564|) 46) (#117#) (system::setvv 183 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #118=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 16)9564|) 47) (#118#) (system::setvv 187 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #119=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 17)9564|) 48) (#119#) (system::setvv 190 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #120=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 18)9564|) 49) (#120#) (system::setvv 193 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #121=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 19)9564|) 50) (#121#) (system::setvv 196 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #122=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 20)9564|) 51) (#122#) (pcl::compile-iis-functions lisp::t))))
)
