       
#(#! 
(lisp::in-package "CONDITIONS")
#(conditions::*debug-level* conditions::*debug-abort* conditions::*debug-continue* conditions::*debug-condition* conditions::*debug-restarts* conditions::*number-of-debug-restarts* conditions::*debug-eval* lisp::eval conditions::*debug-print* "~&~{~S~^,~%~}" lisp::get (lisp::quote conditions::debug-command) (lisp::quote conditions::debug-command-argument-count) lisp::progn lisp::setf conditions::debug-command lisp::quote lisp::function lisp::lambda conditions::debug-command-argument-count "~&Debug ~D> " #\: lisp::*standard-input* lisp::*package* "KEYWORD" :eval :abort "~&There is no way to abort.~%" :continue "~&There is no way to continue.~%" :error "~&~A~%" :help "~&You are in a portable debugger.~
             ~%Type a debugger command or a form to evaluate.~
             ~%Commands are:~%" "~& :EVAL form     Evaluate a form.~
             ~% :HELP          Show this text.~%" "~& :ABORT         Exit by ABORT.~%" "~& :CONTINUE      Exit by CONTINUE.~%" "~& :ERROR         Reprint error message.~%" conditions::*debug-command-prefix* ":" "~& ~A~A " "~D" "~A" #\Space "(Abort) " "(Continue) " "~A" "~%" conditions::*debugger-hook* conditions::*debugger-function* conditions::standard-debugger "Debug" lisp::simple-condition conditions::debug conditions::abort conditions::continue "~&~A~%" conditions::*restart-clusters* :name :function :report-function "Return to debug level ~D." "~&No such restart." "~&Too ~:[few~;many~] arguments to ~A." "~&~S is not a debugger command.~%" #:g3177 system::*make-special lisp::nil lisp::make-string-input-stream lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::make-string-output-stream lisp::get-output-stream-string conditions::coerce-to-condition conditions::compute-restarts conditions::find-restart conditions::show-restarts conditions::read-debug-command conditions::execute-debugger-command conditions::make-restart conditions::invoke-restart conditions::invoke-restart-interactively (system::%init . #((system::setvv 73 (system::mc lisp::nil 61)) (system::setvv 72 (system::mc lisp::nil 60)) (system::setvv 71 (system::mc lisp::nil 59)) (system::setvv 70 (system::mc lisp::nil 58)) (system::setvv 69 (system::mc lisp::nil 57)) (system::setvv 67 (system::mc lisp::nil 56)) (system::mfsfun (lisp::quote #0=#:|progn 'compile2183|) 0 0) (#0#) (system::mfsfun (lisp::quote #1=#:|progn 'compile2195|) 1 0) (#1#) (system::mfsfun (lisp::quote #2=#:|progn 'compile2208|) 2 0) (#2#) (system::mfsfun (lisp::quote #3=#:|progn 'compile2224|) 3 0) (#3#) (system::mfsfun (lisp::quote #4=#:|progn 'compile2236|) 4 0) (#4#) (system::mfsfun (lisp::quote #5=#:|progn 'compile2249|) 5 0) (#5#) (system::mfsfun (lisp::quote #6=#:|progn 'compile2265|) 6 0) (#6#) (system::mfsfun (lisp::quote #7=#:|progn 'compile2277|) 7 0) (#7#) (system::mfsfun (lisp::quote #8=#:|progn 'compile2290|) 8 0) (#8#) (system::mfsfun (lisp::quote #9=#:|progn 'compile2306|) 9 0) (#9#) (system::mfsfun (lisp::quote #10=#:|progn 'compile2318|) 10 0) (#10#) (system::mfsfun (lisp::quote #11=#:|progn 'compile2331|) 11 0) (#11#) (system::mfsfun (lisp::quote #12=#:|progn 'compile2347|) 12 0) (#12#) (system::mfsfun (lisp::quote #13=#:|progn 'compile2359|) 13 0) (#13#) (system::mfsfun (lisp::quote #14=#:|progn 'compile2372|) 14 0) (#14#) (system::mfsfun (lisp::quote #15=#:|progn 'compile2388|) 15 0) (#15#) (system::mfsfun (lisp::quote #16=#:|progn 'compile2400|) 16 0) (#16#) (system::mfsfun (lisp::quote #17=#:|progn 'compile2413|) 17 0) (#17#) (system::mfsfun (lisp::quote #18=#:|progn 'compile2429|) 18 0) (#18#) (system::mfsfun (lisp::quote #19=#:|progn 'compile2441|) 19 0) (#19#) (system::mfsfun (lisp::quote #20=#:|progn 'compile2454|) 20 0) (#20#) (system::mfsfun (lisp::quote #21=#:|progn 'compile2470|) 21 0) (#21#) (system::mfsfun (lisp::quote #22=#:|progn 'compile2482|) 22 0) (#22#) (system::mfsfun (lisp::quote #23=#:|progn 'compile2499|) 23 0) (#23#) (system::mm (lisp::quote conditions::debug-command) 24) (system::mm (lisp::quote conditions::debug-command-argument-count) 25) (system::mm (lisp::quote conditions::define-debug-command) 26) (system::mfsfun (lisp::quote conditions::read-debug-command) 27 0) (system::mfsfun (lisp::quote #24=#:|progn 'compile2611|) 28 0) (#24#) (system::mfsfun (lisp::quote #25=#:|progn 'compile2639|) 29 0) (#25#) (system::mfsfun (lisp::quote #26=#:|progn 'compile2651|) 30 0) (#26#) (system::mfsfun (lisp::quote #27=#:|progn 'compile2675|) 31 0) (#27#) (system::mfsfun (lisp::quote #28=#:|progn 'compile2699|) 32 0) (#28#) (system::mfsfun (lisp::quote #29=#:|progn 'compile2711|) 33 0) (#29#) (system::mfsfun (lisp::quote #30=#:|progn 'compile2735|) 34 0) (#30#) (system::mfsfun (lisp::quote #31=#:|progn 'compile2759|) 35 0) (#31#) (system::mfsfun (lisp::quote #32=#:|progn 'compile2771|) 36 0) (#32#) (system::mfsfun (lisp::quote #33=#:|progn 'compile2795|) 37 0) (#33#) (system::mfsfun (lisp::quote #34=#:|progn 'compile2819|) 38 0) (#34#) (system::mfsfun (lisp::quote #35=#:|progn 'compile2831|) 39 0) (#35#) (system::mfsfun (lisp::quote #36=#:|progn 'compile2855|) 40 0) (#36#) (system::mfsfun (lisp::quote #37=#:|progn 'compile2879|) 41 0) (#37#) (system::mfsfun (lisp::quote #38=#:|progn 'compile2891|) 42 0) (#38#) (system::mfsfun (lisp::quote #39=#:|progn 'compile2907|) 43 0) (#39#) (system::mfsfun (lisp::quote #40=#:|progn 'compile2919|) 44 0) (#40#) (system::mfsfun (lisp::quote #41=#:|progn 'compile2932|) 45 0) (#41#) (system::mfvfun (lisp::quote conditions::show-restarts) 46 768) (system::mfsfun (lisp::quote #42=#:|progn 'compile3023|) 47 0) (#42#) (system::mfsfun (lisp::quote #43=#:|progn 'compile3035|) 48 0) (#43#) (system::mfsfun (lisp::quote #44=#:|progn 'compile3048|) 49 0) (#44#) (system::mfsfun (lisp::quote #45=#:|progn 'compile3064|) 50 0) (#45#) (system::mfsfun (lisp::quote #46=#:|progn 'compile3076|) 51 0) (#46#) (system::mfsfun (lisp::quote #47=#:|progn 'compile3089|) 52 0) (#47#) (system::mf (lisp::quote conditions::invoke-debugger) 53) (system::mfsfun (lisp::quote conditions::standard-debugger) 54 1) (system::mf (lisp::quote conditions::execute-debugger-command) 55) (system::debug (lisp::quote conditions::show-restarts) (lisp::quote (conditions::restarts lisp::max conditions::target-column))) (system::debug (lisp::quote conditions::invoke-debugger) (lisp::quote (conditions::datum conditions::arguments))) (system::debug (lisp::quote conditions::standard-debugger) (lisp::quote (conditions::*debug-level* conditions::*debug-restarts* lisp::nil conditions::*debug-abort*))) (system::debug (lisp::quote conditions::execute-debugger-command) (lisp::quote (conditions::cmd conditions::args conditions::level #:g3175))))))
)
