       
#(#! 
(lisp::in-package "CONDITIONS")
#(conditions::*internal-error-table* :test lisp::equal lisp::gethash lisp::list conditions::*restart-clusters* :name conditions::continue :function :report-function "~a" :function-name :format-string :format-arguments #:g2257 conditions::internal-simple-error conditions::*internal-error-list* (("FEwrong_type_argument" :wrong-type-argument "~S is not of type ~S." conditions::internal-type-error :datum :expected-type) ("FEpackage_error" :package-error "A package error occurred on ~S: ~S." conditions::internal-package-error :package :message) ("FEtoo_few_arguments" :too-few-arguments "~S [or a callee] requires more than ~R argument~:p." conditions::internal-simple-program-error) ("FEtoo_many_arguments" :too-many-arguments "~S [or a callee] requires less than ~R argument~:p." conditions::internal-simple-program-error) ("FEinvalid_macro_call" :invalid-form "Invalid macro call to ~S." conditions::internal-simple-program-error) ("FEunexpected_keyword" :unexpected-keyword "~S does not allow the keyword ~S." conditions::internal-simple-program-error) ("FEunbound_variable" :unbound-variable "The variable ~S is unbound." conditions::internal-unbound-variable :name) ("FEundefined_function" :undefined-function "The function ~S is undefined." conditions::internal-undefined-function :name) ("FEinvalid_function" :invalid-function "~S is invalid as a function." conditions::internal-type-error) ("FEinvalid_variable" :invalid-variable "~S is an invalid variable." conditions::internal-program-error) ("check_arg_failed" :too-few-arguments "~S [or a callee] requires ~R argument~:p,~%
but only ~R ~:*~[were~;was~:;were~] supplied." conditions::internal-simple-program-error) ("ck_larg_at_least" :error "APPLY sended too few arguments to LAMBDA." conditions::internal-simple-control-error) ("ck_larg_exactly" :error "APPLY sended too few arguments to LAMBDA." conditions::internal-simple-control-error) ("keyword_value_mismatch" :error "Keywords and values do not match." conditions::internal-simple-program-error) ("not_a_keyword" :error "~S is not a keyword." conditions::internal-simple-program-error) ("illegal_declare" :invalid-form "~S is an illegal declaration form." conditions::internal-simple-program-error) ("illegal_index" :error "~S is an illegal index to ~S." conditions::internal-simple-error) ("vfun_wrong_number_of_args" :error "Expected ~S args but received ~S args" conditions::internal-simple-control-error) ("end_of_stream" :error "Unexpected end of ~S." conditions::internal-end-of-file :stream) ("open_stream" :error "~S is an illegal IF-DOES-NOT-EXIST option." conditions::internal-simple-control-error) ("open_stream" :error "The file ~A already exists." conditions::internal-simple-file-error :pathname) ("open_stream" :error "Cannot append to the file ~A." conditions::internal-simple-file-error :pathname) ("open_stream" :error "~S is an illegal IF-EXISTS option." conditions::internal-simple-control-error) ("close_stream" :error "Cannot close the standard output." conditions::internal-simple-stream-error) ("close_stream" :error "Cannot close the standard input." conditions::internal-simple-stream-error) ("too_long_file_name" :error "~S is a too long file name." conditions::internal-simple-file-error :pathname) ("cannot_open" :error "Cannot open the file ~A." conditions::internal-simple-file-error :pathname) ("cannot_create" :error "Cannot create the file ~A." conditions::internal-simple-file-error :pathname) ("cannot_read" :error "Cannot read the stream ~S." conditions::internal-simple-stream-error :stream) ("cannot_write" :error "Cannot write to the stream ~S." conditions::internal-simple-stream-error :stream)) lisp::*debug-io* lisp::*error-output* system::*ihs-base* system::*ihs-top* system::*current-ihs* system::*frs-base* system::*frs-top* system::*break-env* "~%~A~%" conditions::*error-set-break-p* system::error-set "~S" lisp::quote conditions::*handler-clusters* conditions::error lisp::*break-enable* #:g2568 lisp::load lisp::open compiler::*compiler-break-enable* system::*break-hidden-packages* conditions::compiler system::*make-special conditions::make-restart conditions::simple-condition-class-p conditions::set-internal-error conditions::initialize-internal-error-table system::ihs-top system::sch-frs-base system::frs-top system::simple-backtrace conditions::clcs-error-set conditions::reset-function conditions::condition-backtrace (system::%init . #((system::mfsfun (lisp::quote #0=#:|progn 'compile2183|) 0 0) (#0#) (system::mfsfun (lisp::quote #1=#:|progn 'compile2195|) 1 0) (#1#) (system::mfsfun (lisp::quote #2=#:|progn 'compile2208|) 2 0) (#2#) (system::mm (lisp::quote conditions::find-internal-error-data) 3) (system::mf (lisp::quote conditions::clcs-universal-error-handler) 4) (system::mfvfun (lisp::quote conditions::set-internal-error) 5 16387) (system::mfsfun (lisp::quote conditions::initialize-internal-error-table) 6 0) (system::mfsfun (lisp::quote #3=#:|progn 'compile2358|) 7 0) (#3#) (system::mfsfun (lisp::quote #4=#:|progn 'compile2370|) 8 0) (#4#) (system::mfsfun (lisp::quote #5=#:|progn 'compile2382|) 9 0) (#5#) (system::mfsfun (lisp::quote #6=#:|progn 'compile2484|) 10 0) (#6#) (system::mfsfun (lisp::quote conditions::condition-backtrace) 11 1) (system::mfsfun (lisp::quote #7=#:|progn 'compile2512|) 12 0) (#7#) (system::mfsfun (lisp::quote #8=#:|progn 'compile2524|) 13 0) (#8#) (system::mfsfun (lisp::quote #9=#:|progn 'compile2537|) 14 0) (#9#) (system::mf (lisp::quote conditions::clcs-error-set) 15) (system::mfsfun (lisp::quote conditions::reset-function) 16 1) (system::mfsfun (lisp::quote #10=#:|progn 'compile2629|) 17 0) (#10#) (system::mfsfun (lisp::quote #11=#:|progn 'compile2661|) 18 0) (#11#) (system::mfsfun (lisp::quote #12=#:|progn 'compile2693|) 19 0) (#12#) (system::mfsfun (lisp::quote #13=#:|progn 'compile2705|) 20 0) (#13#) (system::mf (lisp::quote compiler::cmp-toplevel-eval) 21) (system::debug (lisp::quote conditions::clcs-universal-error-handler) (lisp::quote (conditions::error-name conditions::correctable conditions::function-name conditions::continue-format-string conditions::error-format-string conditions::args #:g2255))) (system::debug (lisp::quote conditions::set-internal-error) (lisp::quote (conditions::error-keyword #:g2311 conditions::condition-name conditions::keyword-list))) (system::debug (lisp::quote conditions::initialize-internal-error-table) (lisp::quote (conditions::error-data))) (system::debug (lisp::quote conditions::condition-backtrace) (lisp::quote (lisp::nil system::*ihs-base* system::*ihs-top*))) (system::debug (lisp::quote conditions::clcs-error-set) (lisp::quote (conditions::form lisp::nil lisp::cond #:g2566))) (system::debug (lisp::quote compiler::cmp-toplevel-eval) (lisp::quote (conditions::form))))))
)
