       
#(#! 
(lisp::in-package "CONDITIONS")#! 
(lisp::import (lisp::quote (conditions::with-simple-restart conditions::abort conditions::continue conditions::compute-restarts conditions::*debug-level* conditions::*debug-restarts* conditions::*number-of-debug-restarts* conditions::*debug-abort* conditions::*debug-continue* conditions::*debug-condition* conditions::*debug-eval* conditions::find-restart conditions::invoke-restart conditions::invoke-restart-interactively conditions::restart-name conditions::ignore-errors conditions::show-restarts conditions::conditionp)) "SYSTEM")#! 
(lisp::in-package "SYSTEM")
#(system::*abort-restarts* lisp::let* ((conditions::*debug-level* (lisp::1+ conditions::*debug-level*)) (system::debug-level conditions::*debug-level*) (conditions::*debug-restarts* (conditions::compute-restarts)) (conditions::*number-of-debug-restarts* (lisp::length conditions::*debug-restarts*)) (conditions::*debug-abort* (conditions::find-restart (lisp::quote conditions::abort))) (conditions::*debug-continue* (lisp::or (lisp::let ((system::c (conditions::find-restart (lisp::quote conditions::continue)))) (lisp::if (lisp::or (lisp::not conditions::*debug-continue*) (lisp::not (lisp::eq conditions::*debug-continue* system::c))) system::c lisp::nil)) (lisp::let ((system::c (lisp::if conditions::*debug-restarts* (lisp::first conditions::*debug-restarts*) lisp::nil))) (lisp::if (lisp::not (lisp::eq system::c conditions::*debug-abort*)) system::c lisp::nil)))) (conditions::*debug-condition* (lisp::if (conditions::conditionp system::at) system::at conditions::*debug-condition*)) (system::*abort-restarts* (lisp::let ((system::abort-list lisp::nil)) (lisp::dolist (system::restart conditions::*debug-restarts*) (lisp::when (lisp::eq (lisp::quote conditions::abort) (conditions::restart-name system::restart)) (lisp::push system::restart system::abort-list))) (lisp::nreverse system::abort-list)))) lisp::- conditions::*number-of-debug-restarts* conditions::*debug-restarts* "~&No such restart." system::*break-message* system::*quit-tags* system::*break-level* system::*quit-tag* system::*ihs-base* system::*ihs-top* system::*current-ihs* system::*frs-base* system::*frs-top* system::*break-env* lisp::*readtable* system::*break-readtable* lisp::*read-suppress* lisp::+ lisp::++ lisp::+++ lisp::* lisp::** lisp::*** lisp::/ lisp::// lisp::/// conditions::*debug-level* conditions::*debug-abort* conditions::abort conditions::*debug-continue* conditions::continue conditions::*debug-condition* conditions::restart conditions::*restart-clusters* :name :function :report-function "Return to debug level ~D." lisp::*debug-io* "~&~A~2%" lisp::*link-array* "Fast links are on: do (use-fast-links nil) for debugging~%" system::*no-prompt* #:g2330 system::*interrupt-enable* "~&~a~a>~{~*>~}" "" "dbl:" lisp::*package* system::user "" "Return to debug level ~D." system::step-continue system::*top-eof* #:g2383 "Continues execution." "Console interrupt." "Console interrupt -- cannot continue." conditions::*debugger-function* system::break-level conditions::*debug-command-prefix* "" :r system::break-resume system::break-command :s conditions::show-restarts "
Break-loop Command Summary ([] indicates optional arg)
--------------------------

:bl [j]     show local variables and their values, or segment of vs if compiled
              in j stack frames starting at the current one.
:bt [n]     BACKTRACE [n steps]
:down [i]   DOWN i frames (one if no i)
:env        describe ENVIRONMENT of this stack frame (for interpreted).
:fr [n]     show frame n
:loc [i]    return i'th local of this frame if its function is compiled (si::loc i)
:r          RESUME (return from the current break loop).
:up [i]     UP i frames (one if no i)

Example: print a bactrace of the last 4 frames

>>:bt 4

Note:  (use-fast-links nil) makes all non system function calls
be recorded in the stack.   (use-fast-links t) is the default


Low level commands:
------------------
:p [i]           make current the i'th PREVIOUS frame (in list show by :b)
:n [i]           make current the i'th NEXT frame (in list show by :b)
:go [ihs-index]  make current the frame corresponding ihs-index
:m               print the last break message.
:s               show restarts.
:c               show function of the current ihs frame.
:q [i]           quit to top level
:r               resume from this break loop.
:b               full backtrace of all functions and special forms.
:bs [name]       backward search for frame named 'name'
:fs  [name]      search for frame named 'name'
:vs [from] [to]  Show value stack between FROM and TO
:ihs [from] [to] Show Invocation History Stack
:bds ['v1 'v2 ..]Show previous special bindings of v1, v2,.. or all if no v1

" system::*make-special conditions::invoke-restart-interactively conditions::conditionp system::ihs-top system::sch-frs-base system::frs-top conditions::compute-restarts conditions::find-restart system::set-back conditions::make-restart system::set-current system::catch-fatal system::dbl-read system::break-call system::clcs-break-level-invoke-restart lisp::evalhook lisp::prin1 system::break-current lisp::cerror lisp::error conditions::invoke-restart (system::%init . #((system::mfsfun (lisp::quote #0=#:|progn 'compile2191|) 0 0) (#0#) (system::mfsfun (lisp::quote #1=#:|progn 'compile2203|) 1 0) (#1#) (system::mfsfun (lisp::quote #2=#:|progn 'compile2216|) 2 0) (#2#) (system::putprop (lisp::quote system::with-clcs-break-level-bindings) (lisp::quote 0) (lisp::quote system::pretty-print-format)) (system::mm (lisp::quote system::with-clcs-break-level-bindings) 3) (system::mf (lisp::quote system::clcs-break-level-invoke-restart) 4) (system::mfvfun (lisp::quote system::clcs-break-level) 5 513) (system::mfsfun (lisp::quote system::clcs-terminal-interrupt) 6 1) (system::mfvfun (lisp::quote system::clcs-break-quit) 7 256) (system::mfsfun (lisp::quote #3=#:|progn 'compile2510|) 8 0) (#3#) (system::mfsfun (lisp::quote #4=#:|progn 'compile2522|) 9 0) (#4#) (system::mf (lisp::quote system::break-resume) 10) (system::mfsfun (lisp::quote #5=#:|progn 'compile2542|) 11 0) (#5#) (system::mfsfun (lisp::quote #6=#:|progn 'compile2554|) 12 0) (#6#) (system::mf (lisp::quote system::break-help) 13) (system::debug (lisp::quote system::clcs-break-level-invoke-restart) (lisp::quote (lisp::-))) (system::debug (lisp::quote system::clcs-break-level) (lisp::quote (system::at system::env lisp::nil system::*break-level* system::*ihs-base* system::*ihs-top* lisp::nil lisp::nil lisp::nil system::*break-env* lisp::nil lisp::nil lisp::+ lisp::++ lisp::nil lisp::- lisp::* lisp::** lisp::nil lisp::/ lisp::// lisp::nil conditions::*debug-level* system::debug-level conditions::*debug-restarts* lisp::nil conditions::*debug-abort* lisp::nil lisp::nil lisp::nil system::restart lisp::nil lisp::nil lisp::values system::val))) (system::debug (lisp::quote system::clcs-break-quit) (lisp::quote (system::level))))))
)
