       
#(#! 
(lisp::in-package "CONDITIONS")
#("Ill-formed handler bindings." lisp::let conditions::*handler-clusters* lisp::cons lisp::list lisp::quote lisp::simple-condition conditions::signal conditions::*break-on-signals* "~A~%Break entered because of *BREAK-ON-SIGNALS*." "Ignore the additional arguments." lisp::simple-type-error :datum :expected-type lisp::null :format-string "You may not supply additional arguments ~
				     when giving ~S to ~S." :format-arguments (lisp::or lisp::symbol lisp::string) "Bad argument to ~S: ~S" conditions::simple-error conditions::error conditions::*restart-clusters* :name conditions::continue :function :report-function "~A" #:g2300 "Break" "Return from BREAK." #:g2344 lisp::simple-warning conditions::warn lisp::warning conditions::store-value "Supply a new value of ~S." lisp::condition :interactive-function "The value of ~S is ~S, ~
				     which is not ~A." "a warning condition" #:g2392 lisp::*break-on-warnings* "~A~%Break entered because of *BREAK-ON-WARNINGS*." conditions::muffle-warning "Skip warning." #:g2428 lisp::*error-output* "~&Warning:~%~A~%" :no-error "NORMAL-RETURN" "ERROR-RETURN" lisp::block lisp::multiple-value-call lisp::function lisp::lambda lisp::return-from conditions::handler-case lisp::tagbody conditions::handler-bind (conditions::temp) lisp::setq conditions::temp lisp::go lisp::progn (conditions::error (lisp::condition) (lisp::values lisp::nil lisp::condition)) lisp::nil lisp::every conditions::coerce-to-condition lisp::typep conditions::break conditions::conditionp conditions::cerror conditions::condition-class-p conditions::make-condition conditions::invoke-debugger conditions::make-restart conditions::read-evaluated-form lisp::remove (system::%init . #((system::setvv 66 (system::mc lisp::nil 9)) (system::*make-special (lisp::quote conditions::*handler-clusters*)) (lisp::or (lisp::boundp (lisp::quote conditions::*handler-clusters*)) (lisp::setq conditions::*handler-clusters* lisp::nil)) (system::putprop (lisp::quote conditions::handler-bind) (lisp::quote 1) (lisp::quote system::pretty-print-format)) (system::mm (lisp::quote conditions::handler-bind) 0) (system::*make-special (lisp::quote conditions::*break-on-signals*)) (lisp::or (lisp::boundp (lisp::quote conditions::*break-on-signals*)) (lisp::setq conditions::*break-on-signals* lisp::nil)) (system::mf (lisp::quote conditions::signal) 1) (system::mf (lisp::quote conditions::coerce-to-condition) 2) (system::mf (lisp::quote conditions::error) 3) (system::mf (lisp::quote conditions::cerror) 4) (system::mf (lisp::quote conditions::break) 5) (system::mf (lisp::quote conditions::warn) 6) (system::mm (lisp::quote conditions::handler-case) 7) (system::mm (lisp::quote conditions::ignore-errors) 8) (system::debug (lisp::quote conditions::signal) (lisp::quote (conditions::datum conditions::arguments conditions::*handler-clusters* conditions::handler))) (system::debug (lisp::quote conditions::coerce-to-condition) (lisp::quote (conditions::datum conditions::arguments conditions::default-type conditions::function-name))) (system::debug (lisp::quote conditions::error) (lisp::quote (conditions::datum conditions::arguments))) (system::debug (lisp::quote conditions::cerror) (lisp::quote (conditions::continue-string conditions::datum conditions::arguments #:g2298))) (system::debug (lisp::quote conditions::break) (lisp::quote (conditions::format-string conditions::format-arguments #:g2342))) (system::debug (lisp::quote conditions::warn) (lisp::quote (conditions::datum conditions::arguments #:g2390 lisp::nil conditions::value))))))
)
