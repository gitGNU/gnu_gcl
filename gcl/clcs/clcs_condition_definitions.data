       
#(#! 
(lisp::in-package "CONDITIONS")
#(lisp::warning lisp::standard-class (lisp::condition) lisp::serious-condition (lisp::condition) conditions::error (lisp::serious-condition) lisp::simple-condition (lisp::condition) :name conditions::format-string :readers (conditions::simple-condition-format-string) :writers :initargs (:format-string) (:type lisp::string) :initfunction conditions::format-arguments (conditions::simple-condition-format-arguments) (:format-arguments) (:initform (lisp::quote lisp::nil)) lisp::*print-escape* pcl::fast-method-call lisp::nil pcl::std-instance pcl::*funcallable-instance-marker* pcl::method-call conditions::case-failure conditions::etypecase :datum :expected-type (lisp::or . #0=(pcl::method-call lisp::function)) :possibilities #0# "No next method." lisp::simple-warning (lisp::simple-condition lisp::warning) conditions::simple-error (lisp::simple-condition conditions::error) lisp::storage-condition (lisp::serious-condition) conditions::stack-overflow (lisp::storage-condition) conditions::storage-exhausted (lisp::storage-condition) lisp::type-error (conditions::error) conditions::datum (conditions::type-error-datum) (:datum) conditions::expected-type (conditions::type-error-expected-type) (:expected-type) lisp::nil (lisp::or . #1=(pcl::method-call lisp::function)) #1# "~S is not of type ~S." lisp::simple-type-error (lisp::simple-condition lisp::type-error) (lisp::type-error) conditions::name (conditions::case-failure-name) (:name) conditions::possibilities (conditions::case-failure-possibilities) (:possibilities) lisp::nil (lisp::or . #2=(pcl::method-call lisp::function)) #2# "~S fell through ~S expression.~%Wanted one of ~:S." lisp::program-error (conditions::error) lisp::control-error (conditions::error) lisp::stream-error (conditions::error) lisp::stream (conditions::stream-error-stream) (:stream) lisp::end-of-file (lisp::stream-error) lisp::nil (lisp::or . #3=(pcl::method-call lisp::function)) #3# "Unexpected end of file on ~S." lisp::file-error (conditions::error) lisp::pathname (conditions::file-error-pathname) (:pathname) lisp::package-error (conditions::error) lisp::package (conditions::package-error-package) (:package) conditions::message (conditions::package-error-message) (:message) lisp::nil (lisp::or . #4=(pcl::method-call lisp::function)) #4# "A package error occurred on ~S: ~S." lisp::cell-error (conditions::error) (conditions::cell-error-name) (:name) lisp::unbound-variable (lisp::cell-error) lisp::nil (lisp::or . #5=(pcl::method-call lisp::function)) #5# "The variable ~S is unbound." lisp::undefined-function (lisp::cell-error) lisp::nil (lisp::or . #6=(pcl::method-call lisp::function)) #6# "The function ~S is undefined." lisp::arithmetic-error (conditions::error) conditions::operation (conditions::arithmetic-error-operation) (:operation) lisp::division-by-zero (lisp::arithmetic-error) lisp::floating-point-overflow (lisp::arithmetic-error) lisp::floating-point-underflow (lisp::arithmetic-error) conditions::abort-failure (lisp::control-error) lisp::nil (lisp::or . #7=(pcl::method-call lisp::function)) #7# "Abort failed." conditions::internal-error (conditions::error) conditions::function-name (conditions::internal-error-function-name) (:function-name) (:initform (lisp::quote lisp::nil)) lisp::nil (lisp::or . #8=(pcl::method-call lisp::function)) #8# "Error in ~S [or a callee]: " lisp::nil (lisp::or . #9=(pcl::method-call lisp::function)) #9# "Error in ~S [or a callee]: " conditions::internal-simple-error (conditions::internal-error lisp::simple-condition) lisp::nil (lisp::or . #10=(pcl::method-call lisp::function)) #10# conditions::internal-type-error (conditions::internal-error lisp::type-error) conditions::internal-package-error (conditions::internal-error lisp::package-error) conditions::internal-simple-program-error (conditions::internal-simple-error lisp::program-error) conditions::internal-simple-control-error (conditions::internal-simple-error lisp::control-error) conditions::internal-unbound-variable (conditions::internal-error lisp::unbound-variable) conditions::internal-undefined-function (conditions::internal-error lisp::undefined-function) conditions::internal-end-of-file (conditions::internal-error lisp::end-of-file) conditions::internal-simple-file-error (conditions::internal-simple-error lisp::file-error) conditions::internal-simple-stream-error (conditions::internal-simple-error lisp::stream-error) conditions::*simple-condition-class* pcl::load-defclass conditions::simple-condition-format-string conditions::simple-condition-format-arguments pcl::false system::structure-subtype-p pcl::cclosure-env-nthcdr lisp::error conditions::simple-condition-printer conditions::type-error-datum conditions::type-error-expected-type conditions::case-failure-name conditions::case-failure-possibilities conditions::stream-error-stream conditions::package-error-package conditions::package-error-message conditions::cell-error-name conditions::internal-error-function-name conditions::internal-simple-error-printer pcl::find-class lisp::typep pcl::class-precedence-list (system::%init . #((lisp::let* ((#11=#:g2169 :clos-conditions)) (lisp::setq lisp::*features* (lisp::adjoin #11# lisp::*features*))) (lisp::if (lisp::and (lisp::member :clos-conditions lisp::*features*) (lisp::member :defstruct-conditions lisp::*features*)) (lisp::progn (lisp::dolist (conditions::sym (lisp::quote (conditions::simple-condition-format-string conditions::simple-condition-format-arguments conditions::type-error-datum conditions::type-error-expected-type conditions::case-failure-name conditions::case-failure-possibilities conditions::stream-error-stream conditions::file-error-pathname conditions::package-error-package conditions::cell-error-name conditions::arithmetic-error-operation conditions::internal-error-function-name))) (lisp::when (lisp::fboundp conditions::sym) (lisp::fmakunbound conditions::sym))) (lisp::setq lisp::*features* (lisp::remove :defstruct-conditions lisp::*features*)))) (system::mf (lisp::quote #12=#:|Defclass WARNING2194|) 0) (#12#) (lisp::let* ((#13=#:g2214 (lisp::quote (lisp::warning (lisp::condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #13# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::warning) #14=(lisp::quote system::s-data) lisp::nil) (system::mf (lisp::quote #15=#:|Defclass SERIOUS-CONDITION2243|) 1) (#15#) (lisp::let* ((#16=#:g2263 (lisp::quote (lisp::serious-condition (lisp::condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #16# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::serious-condition) #14# lisp::nil) (system::mf (lisp::quote #17=#:|Defclass ERROR2292|) 2) (#17#) (lisp::let* ((#18=#:g2312 (lisp::quote (conditions::error (lisp::serious-condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #18# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::error) #14# lisp::nil) (system::mf (lisp::quote conditions::simple-condition-printer) 3) (system::mf (lisp::quote #19=#:|Defclass SIMPLE-CONDITION2345|) 4) (#19#) (lisp::let* ((#20=#:g2367 (lisp::quote (lisp::simple-condition (lisp::condition) (:format-string . lisp::string) (:format-arguments . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #20# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::simple-condition) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::simple-condition) lisp::stream))) (system::setvv 24 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (SIMPLE-CONDITION T))|) 5) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::simple-condition lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (SIMPLE-CONDITION T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #21=#:|Defclass SIMPLE-WARNING2585|) 6) (#21#) (lisp::let* ((#22=#:g2605 (lisp::quote (lisp::simple-warning (lisp::simple-condition lisp::warning))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #22# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::simple-warning) #14# lisp::nil) (system::mf (lisp::quote #23=#:|Defclass SIMPLE-ERROR2634|) 7) (#23#) (lisp::let* ((#24=#:g2654 (lisp::quote (conditions::simple-error (lisp::simple-condition conditions::error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #24# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::simple-error) #14# lisp::nil) (system::mf (lisp::quote #25=#:|Defclass STORAGE-CONDITION2683|) 8) (#25#) (lisp::let* ((#26=#:g2703 (lisp::quote (lisp::storage-condition (lisp::serious-condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #26# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::storage-condition) #14# lisp::nil) (system::mf (lisp::quote #27=#:|Defclass STACK-OVERFLOW2732|) 9) (#27#) (lisp::let* ((#28=#:g2752 (lisp::quote (conditions::stack-overflow (lisp::storage-condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #28# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::stack-overflow) #14# lisp::nil) (system::mf (lisp::quote #29=#:|Defclass STORAGE-EXHAUSTED2781|) 10) (#29#) (lisp::let* ((#30=#:g2801 (lisp::quote (conditions::storage-exhausted (lisp::storage-condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #30# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::storage-exhausted) #14# lisp::nil) (system::mf (lisp::quote #31=#:|Defclass TYPE-ERROR2830|) 11) (#31#) (lisp::let* ((#32=#:g2852 (lisp::quote (lisp::type-error (conditions::error) (:datum . lisp::t) (:expected-type . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #32# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::type-error) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::type-error) lisp::stream))) (system::setvv 54 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (TYPE-ERROR T))|) 12) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::type-error lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (TYPE-ERROR T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #33=#:|Defclass SIMPLE-TYPE-ERROR3074|) 13) (#33#) (lisp::let* ((#34=#:g3094 (lisp::quote (lisp::simple-type-error (lisp::simple-condition lisp::type-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #34# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::simple-type-error) #14# lisp::nil) (system::mf (lisp::quote #35=#:|Defclass CASE-FAILURE3123|) 14) (#35#) (lisp::let* ((#36=#:g3145 (lisp::quote (conditions::case-failure (lisp::type-error) (:name . lisp::t) (:possibilities . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #36# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::case-failure) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x conditions::case-failure) lisp::stream))) (system::setvv 67 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (CASE-FAILURE T))|) 15) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (conditions::case-failure lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (CASE-FAILURE T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #37=#:|Defclass PROGRAM-ERROR3367|) 16) (#37#) (lisp::let* ((#38=#:g3387 (lisp::quote (lisp::program-error (conditions::error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #38# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::program-error) #14# lisp::nil) (system::mf (lisp::quote #39=#:|Defclass CONTROL-ERROR3416|) 17) (#39#) (lisp::let* ((#40=#:g3436 (lisp::quote (lisp::control-error (conditions::error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #40# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::control-error) #14# lisp::nil) (system::mf (lisp::quote #41=#:|Defclass STREAM-ERROR3465|) 18) (#41#) (lisp::let* ((#42=#:g3486 (lisp::quote (lisp::stream-error (conditions::error) (:stream . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #42# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::stream-error) #14# lisp::nil) (system::mf (lisp::quote #43=#:|Defclass END-OF-FILE3515|) 19) (#43#) (lisp::let* ((#44=#:g3535 (lisp::quote (lisp::end-of-file (lisp::stream-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #44# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::end-of-file) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::end-of-file) lisp::stream))) (system::setvv 82 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (END-OF-FILE T))|) 20) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::end-of-file lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (END-OF-FILE T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #45=#:|Defclass FILE-ERROR3757|) 21) (#45#) (lisp::let* ((#46=#:g3778 (lisp::quote (lisp::file-error (conditions::error) (:pathname . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #46# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::file-error) #14# lisp::nil) (system::mf (lisp::quote #47=#:|Defclass PACKAGE-ERROR3807|) 22) (#47#) (lisp::let* ((#48=#:g3829 (lisp::quote (lisp::package-error (conditions::error) (:package . lisp::t) (:message . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #48# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::package-error) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::package-error) lisp::stream))) (system::setvv 99 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (PACKAGE-ERROR T))|) 23) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::package-error lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (PACKAGE-ERROR T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #49=#:|Defclass CELL-ERROR4051|) 24) (#49#) (lisp::let* ((#50=#:g4072 (lisp::quote (lisp::cell-error (conditions::error) (:name . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #50# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::cell-error) #14# lisp::nil) (system::mf (lisp::quote #51=#:|Defclass UNBOUND-VARIABLE4101|) 25) (#51#) (lisp::let* ((#52=#:g4121 (lisp::quote (lisp::unbound-variable (lisp::cell-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #52# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::unbound-variable) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::unbound-variable) lisp::stream))) (system::setvv 109 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNBOUND-VARIABLE T))|) 26) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::unbound-variable lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNBOUND-VARIABLE T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #53=#:|Defclass UNDEFINED-FUNCTION4343|) 27) (#53#) (lisp::let* ((#54=#:g4363 (lisp::quote (lisp::undefined-function (lisp::cell-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #54# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::undefined-function) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x lisp::undefined-function) lisp::stream))) (system::setvv 115 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNDEFINED-FUNCTION T))|) 28) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (lisp::undefined-function lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNDEFINED-FUNCTION T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #55=#:|Defclass ARITHMETIC-ERROR4585|) 29) (#55#) (lisp::let* ((#56=#:g4606 (lisp::quote (lisp::arithmetic-error (conditions::error) (:operation . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #56# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::arithmetic-error) #14# lisp::nil) (system::mf (lisp::quote #57=#:|Defclass DIVISION-BY-ZERO4635|) 30) (#57#) (lisp::let* ((#58=#:g4655 (lisp::quote (lisp::division-by-zero (lisp::arithmetic-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #58# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::division-by-zero) #14# lisp::nil) (system::mf (lisp::quote #59=#:|Defclass FLOATING-POINT-OVERFLOW4684|) 31) (#59#) (lisp::let* ((#60=#:g4704 (lisp::quote (lisp::floating-point-overflow (lisp::arithmetic-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #60# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::floating-point-overflow) #14# lisp::nil) (system::mf (lisp::quote #61=#:|Defclass FLOATING-POINT-UNDERFLOW4733|) 32) (#61#) (lisp::let* ((#62=#:g4753 (lisp::quote (lisp::floating-point-underflow (lisp::arithmetic-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #62# conditions::*condition-class-list*))) (system::sputprop (lisp::quote lisp::floating-point-underflow) #14# lisp::nil) (system::mf (lisp::quote #63=#:|Defclass ABORT-FAILURE4782|) 33) (#63#) (lisp::let* ((#64=#:g4802 (lisp::quote (conditions::abort-failure (lisp::control-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #64# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::abort-failure) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x conditions::abort-failure) lisp::stream))) (system::setvv 132 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (ABORT-FAILURE T))|) 34) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (conditions::abort-failure lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (ABORT-FAILURE T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #65=#:|Defclass INTERNAL-ERROR5028|) 35) (#65#) (lisp::let* ((#66=#:g5049 (lisp::quote (conditions::internal-error (conditions::error) (:function-name . lisp::t))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #66# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-error) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x conditions::internal-error) lisp::stream))) (system::setvv 142 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 146 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-ERROR T))|) 36) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (conditions::internal-error lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-ERROR T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote conditions::internal-simple-error-printer) 37) (system::mf (lisp::quote #67=#:|Defclass INTERNAL-SIMPLE-ERROR5395|) 38) (#67#) (lisp::let* ((#68=#:g5415 (lisp::quote (conditions::internal-simple-error (conditions::internal-error lisp::simple-condition))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #68# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-simple-error) #14# lisp::nil) (pcl::proclaim-defgeneric (lisp::quote pcl::print-object) (lisp::quote ((conditions::x conditions::internal-simple-error) lisp::stream))) (system::setvv 152 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-SIMPLE-ERROR T))|) 39) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::print-object) (lisp::quote lisp::nil) (lisp::quote (conditions::internal-simple-error lisp::t)) (lisp::quote (conditions::x lisp::stream)) (lisp::list* :fast-function (lisp::function conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-SIMPLE-ERROR T))|) (lisp::quote (:plist (:arg-info (2) :needs-next-methods-p lisp::t)))) (lisp::quote lisp::nil)) (system::mf (lisp::quote #69=#:|Defclass INTERNAL-TYPE-ERROR5633|) 40) (#69#) (lisp::let* ((#70=#:g5653 (lisp::quote (conditions::internal-type-error (conditions::internal-error lisp::type-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #70# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-type-error) #14# lisp::nil) (system::mf (lisp::quote #71=#:|Defclass INTERNAL-PACKAGE-ERROR5682|) 41) (#71#) (lisp::let* ((#72=#:g5702 (lisp::quote (conditions::internal-package-error (conditions::internal-error lisp::package-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #72# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-package-error) #14# lisp::nil) (system::mf (lisp::quote #73=#:|Defclass INTERNAL-SIMPLE-PROGRAM-ERROR5731|) 42) (#73#) (lisp::let* ((#74=#:g5751 (lisp::quote (conditions::internal-simple-program-error (conditions::internal-simple-error lisp::program-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #74# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-simple-program-error) #14# lisp::nil) (system::mf (lisp::quote #75=#:|Defclass INTERNAL-SIMPLE-CONTROL-ERROR5780|) 43) (#75#) (lisp::let* ((#76=#:g5800 (lisp::quote (conditions::internal-simple-control-error (conditions::internal-simple-error lisp::control-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #76# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-simple-control-error) #14# lisp::nil) (system::mf (lisp::quote #77=#:|Defclass INTERNAL-UNBOUND-VARIABLE5829|) 44) (#77#) (lisp::let* ((#78=#:g5849 (lisp::quote (conditions::internal-unbound-variable (conditions::internal-error lisp::unbound-variable))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #78# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-unbound-variable) #14# lisp::nil) (system::mf (lisp::quote #79=#:|Defclass INTERNAL-UNDEFINED-FUNCTION5878|) 45) (#79#) (lisp::let* ((#80=#:g5898 (lisp::quote (conditions::internal-undefined-function (conditions::internal-error lisp::undefined-function))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #80# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-undefined-function) #14# lisp::nil) (system::mf (lisp::quote #81=#:|Defclass INTERNAL-END-OF-FILE5927|) 46) (#81#) (lisp::let* ((#82=#:g5947 (lisp::quote (conditions::internal-end-of-file (conditions::internal-error lisp::end-of-file))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #82# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-end-of-file) #14# lisp::nil) (system::mf (lisp::quote #83=#:|Defclass INTERNAL-SIMPLE-FILE-ERROR5976|) 47) (#83#) (lisp::let* ((#84=#:g5996 (lisp::quote (conditions::internal-simple-file-error (conditions::internal-simple-error lisp::file-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #84# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-simple-file-error) #14# lisp::nil) (system::mf (lisp::quote #85=#:|Defclass INTERNAL-SIMPLE-STREAM-ERROR6025|) 48) (#85#) (lisp::let* ((#86=#:g6045 (lisp::quote (conditions::internal-simple-stream-error (conditions::internal-simple-error lisp::stream-error))))) (lisp::setq conditions::*condition-class-list* (lisp::adjoin #86# conditions::*condition-class-list*))) (system::sputprop (lisp::quote conditions::internal-simple-stream-error) #14# lisp::nil) (system::*make-special (lisp::quote conditions::*simple-condition-class*)) (lisp::or (lisp::boundp (lisp::quote conditions::*simple-condition-class*)) (lisp::setq conditions::*simple-condition-class* (pcl::find-class (lisp::quote lisp::simple-condition)))) (system::mf (lisp::quote conditions::simple-condition-class-p) 49) (system::debug (lisp::quote conditions::simple-condition-printer) (lisp::quote (lisp::condition lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (SIMPLE-CONDITION T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (TYPE-ERROR T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (CASE-FAILURE T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (END-OF-FILE T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (PACKAGE-ERROR T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNBOUND-VARIABLE T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (UNDEFINED-FUNCTION T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (ABORT-FAILURE T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-ERROR T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::internal-simple-error-printer) (lisp::quote (lisp::condition lisp::stream))) (system::debug (lisp::quote conditions::|(PCL::FAST-METHOD PRINT-OBJECT (INTERNAL-SIMPLE-ERROR T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. conditions::x lisp::stream))) (system::debug (lisp::quote conditions::simple-condition-class-p) (lisp::quote (lisp::type))))))
)
