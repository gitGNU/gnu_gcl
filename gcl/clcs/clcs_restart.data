       
#(#! 
(lisp::in-package "CONDITIONS")
#(conditions::*unique-id-table* conditions::*unique-id-count* lisp::&rest "&REST keyword is ~:[missing~;misplaced~]." "KEYWORD" lisp::multiple-value-bind conditions::parse-keyword-pairs lisp::quote lisp::let lisp::getf conditions::*restart-clusters* lisp::*print-escape* "#<~S.~D>" conditions::restart :name conditions::abort :function :report-function system::*quit-tag* system::*break-level* system::*quit-tags* :key (:not-found) :not-found "Return to ? level." "Return to top level." "Return to break level ~D." :interactive-function conditions::*kcl-top-restarts* "~S" "~S" lisp::cons lisp::list conditions::make-restart "Restart ~S is not active." "Restart ~S is not active." (:report :interactive) :report :interactive lisp::block lisp::tagbody conditions::restart-bind lisp::function lisp::lambda (lisp::&rest conditions::temp) lisp::setq conditions::temp lisp::go lisp::return-from lisp::apply (lisp::stream) lisp::write-string lisp::stream conditions::restart-case lisp::progn (lisp::stream) lisp::format (lisp::values lisp::nil lisp::t) conditions::abort-failure conditions::continue conditions::muffle-warning conditions::store-value conditions::use-value conditions::error conditions::kcl-top-restarts conditions::unique-id conditions::restart-report conditions::make-kcl-top-restart conditions::find-kcl-top-restart conditions::find-restart conditions::invoke-restart lisp::cdr lisp::find (system::%init . #((system::*make-special (lisp::quote conditions::*unique-id-table*)) (lisp::or (lisp::boundp (lisp::quote conditions::*unique-id-table*)) (lisp::setq conditions::*unique-id-table* (lisp::make-hash-table))) (system::*make-special (lisp::quote conditions::*unique-id-count*)) (lisp::or (lisp::boundp (lisp::quote conditions::*unique-id-count*)) (lisp::setq conditions::*unique-id-count* -1)) (system::putprop (lisp::quote conditions::unique-id) "Generates a unique integer ID for its argument." (lisp::quote system::function-documentation)) (system::mf (lisp::quote conditions::unique-id) 0) (system::mf (lisp::quote conditions::parse-keyword-pairs) 1) (system::putprop (lisp::quote conditions::with-keyword-pairs) (lisp::quote 1) #0=(lisp::quote system::pretty-print-format)) (system::mm (lisp::quote conditions::with-keyword-pairs) 2) (system::*make-special (lisp::quote conditions::*restart-clusters*)) (lisp::or (lisp::boundp (lisp::quote conditions::*restart-clusters*)) (lisp::setq conditions::*restart-clusters* (lisp::quote lisp::nil))) (system::mf (lisp::quote conditions::compute-restarts) 3) (system::mf (lisp::quote conditions::restart-print) 4) (system::define-structure (lisp::quote conditions::restart) (lisp::quote conditions::restart-) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote ((conditions::name lisp::nil lisp::t lisp::nil 0) (lisp::function lisp::nil lisp::t lisp::nil 1) (conditions::report-function lisp::nil lisp::t lisp::nil 2) (conditions::interactive-function lisp::nil lisp::t lisp::nil 3))) (lisp::quote conditions::copy-restart) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote conditions::restart-print) (lisp::quote (conditions::make-restart)) (lisp::quote 4) (lisp::quote conditions::restart-p) (lisp::quote lisp::nil)) (system::mf (lisp::quote conditions::make-restart) 5) (system::*make-special (lisp::quote conditions::*kcl-top-restarts*)) (lisp::or (lisp::boundp (lisp::quote conditions::*kcl-top-restarts*)) (lisp::setq conditions::*kcl-top-restarts* lisp::nil)) (system::mf (lisp::quote conditions::make-kcl-top-restart) 6) (system::mf (lisp::quote conditions::find-kcl-top-restart) 7) (system::mf (lisp::quote conditions::kcl-top-restarts) 8) (system::mf (lisp::quote conditions::restart-report) 9) (system::putprop (lisp::quote conditions::restart-bind) (lisp::quote 1) #0#) (system::mm (lisp::quote conditions::restart-bind) 10) (system::mf (lisp::quote conditions::find-restart) 11) (system::mf (lisp::quote conditions::invoke-restart) 12) (system::mf (lisp::quote conditions::invoke-restart-interactively) 13) (system::putprop (lisp::quote conditions::restart-case) (lisp::quote 1) #0#) (system::mm (lisp::quote conditions::restart-case) 14) (system::putprop (lisp::quote conditions::with-simple-restart) (lisp::quote 1) #0#) (system::mm (lisp::quote conditions::with-simple-restart) 15) (system::mf (lisp::quote conditions::abort) 16) (system::mf (lisp::quote conditions::continue) 17) (system::mf (lisp::quote conditions::muffle-warning) 18) (system::mf (lisp::quote conditions::store-value) 19) (system::mf (lisp::quote conditions::use-value) 20) (system::debug (lisp::quote conditions::unique-id) (lisp::quote (conditions::obj #:g2196))) (system::debug (lisp::quote conditions::parse-keyword-pairs) (lisp::quote (lisp::list conditions::keys))) (system::debug (lisp::quote conditions::restart-print) (lisp::quote (conditions::restart lisp::stream))) (system::debug (lisp::quote conditions::make-restart) (lisp::quote (conditions::name lisp::function conditions::report-function conditions::interactive-function))) (system::debug (lisp::quote conditions::make-kcl-top-restart) (lisp::quote (conditions::quit-tag))) (system::debug (lisp::quote conditions::find-kcl-top-restart) (lisp::quote (conditions::quit-tag #:g2330))) (system::debug (lisp::quote conditions::kcl-top-restarts) (lisp::quote (conditions::old-tags conditions::tags conditions::restarts))) (system::debug (lisp::quote conditions::restart-report) (lisp::quote (conditions::restart lisp::stream lisp::nil conditions::name))) (system::debug (lisp::quote conditions::find-restart) (lisp::quote (conditions::name lisp::nil conditions::restart-cluster conditions::restart))) (system::debug (lisp::quote conditions::invoke-restart) (lisp::quote (conditions::restart lisp::values))) (system::debug (lisp::quote conditions::invoke-restart-interactively) (lisp::quote (conditions::restart))) (system::debug (lisp::quote conditions::store-value) (lisp::quote (conditions::value))) (system::debug (lisp::quote conditions::use-value) (lisp::quote (conditions::value))))))
)
